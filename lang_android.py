#!/usr/bin/env python
#coding:utf-8
import csv, datetime, os, sys
import xml.sax.saxutils

lang_dir_dict = {'en': '', 'zh-Hans': '-zh-rCN'}

def proc_lang_csv(lang, lang_file, csv_filename, keys, ios_lang=False):
    count = 0
    with open(csv_filename, 'rb') as csv_file:
        reader = csv.DictReader(csv_file, delimiter=',', quotechar='\"')
        for row in reader:
            module = row['Module'].strip()
            function = row['Function'].strip()
            tag = row['Tag'].strip()
            if (len(module) == 0 or len(function) == 0):
                print '\033[1;33mwarning: line %d, empty module or function\033[0m'%(reader.line_num)
                continue
            key = module + '_' + function
            if len(tag) > 0:
                key += '_' + tag
            if key in keys:
                print '\033[1;31merror: line %d, duplicated key "%s"\033[0m'%(reader.line_num, key)
                #exit(255)
                continue
            keys[key] = key
            value = xml.sax.saxutils.escape(row[lang])
            if ios_lang:
                value = value.replace("%@", "%s")
                value = value.replace("$@", "$s")
            lang_file.write('    <string name=\"%s\">%s</string>\n'%(key, value))
            count = count + 1
    return count

def gen_lang_file(lang):
    count = 0
    keys = {} 
  
    lang_file_name = '%s.xml'%(lang)
    
    with open(lang_file_name, 'wb') as lang_file:
        lang_file.write("<!--\n")
        lang_file.write("Localizable.strings\n")
        date = datetime.datetime.now().strftime('%m/%d/%Y')  
        this_file = os.path.split(sys.argv[0])[-1]
        lang_file.write("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n")
        lang_file.write("This file is automatically generated by %s . Do not modify!\n"%(this_file))
        lang_file.write("Copyright Â© 2016 Spotlite. All rights reserved.\n")
        lang_file.write("-->\n")
        lang_file.write("<resources>\n")
 
        count = count + proc_lang_csv(lang, lang_file, 'lang.csv', keys, True)

        lang_file.write("</resources>\n")
    print 'done %s, %d pairs written'%(lang_file_name, count)      

gen_lang_file('en')
gen_lang_file('zh-Hans')
